trigger:
  branches:
    include:
    - main
    - uat
    - develop

variables:
    dockerRegistryServiceConnection: 'acromnichannel'
    devImageRepository: 'omnichannel/cibwebdev'
    uatImageRepository: 'omnichannel/cibwebuat'
    imageRepository: 'omnichannel/cibweb'
    containerRegistry: 'acromnichannel.azurecr.io'
    dockerfilePath: '**/Dockerfile'
    tag: '$(Build.BuildId)'

    vmImageName: 'ubuntu-latest'

stages:
- stage: BuildDEV
  displayName: Build stage
  condition: and(always(), contains(variables['Build.SourceBranch'], 'refs/heads/develop'))
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: Docker@2
      displayName: Build
      inputs:
        command: build
        repository: $(devImageRepository)
        dockerfile: $(dockerfilePath)
        buildContext: $(system.defaultworkingdirectory)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push
      inputs:
        command: push
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(devImageRepository)
        tags: |
          $(tag)

- stage: BuildUAT
  displayName: Build stage
  condition: and(always(), contains(variables['Build.SourceBranch'], 'refs/heads/uat'))
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: Docker@2
      displayName: Build
      inputs:
        command: build
        repository: $(uatImageRepository)
        dockerfile: $(dockerfilePath)
        buildContext: $(system.defaultworkingdirectory)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push
      inputs:
        command: push
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(uatImageRepository)
        tags: |
          $(tag)

- stage: BuildPROD
  displayName: Build stage
  condition: and(always(), contains(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: Docker@2
      displayName: Build
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        buildContext: $(system.defaultworkingdirectory)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Push
      inputs:
        command: push
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        tags: |
          $(tag)
