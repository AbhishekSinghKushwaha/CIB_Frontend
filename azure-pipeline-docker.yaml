trigger:
  branches:
    include:
      - main
      - release
      - develop
      - uat

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "acromnichannel"
  imageRepository: "omnichannel/cibweb"
  containerRegistry: "acromnichannel.azurecr.io"
  dockerfilePath: "**/Dockerfile"
  tag: "$(Build.BuildId)"
  appName: "cibweb"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: BuildDEV
    displayName: Build DEV stage
    condition: and(always(), contains(variables['Build.SourceBranch'], 'refs/heads/develop'))
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build
            inputs:
              command: build
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              buildContext: $(system.defaultworkingdirectory)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest
          # - script: |
          #     wget https://download.defensecode.com/latest/clients/tscli.tar.gz -O tscli.tar.gz
          #     tar xvzf tscli.tar.gz
          #   displayName: 'Download/Extract ThunderScan API CLI'

          # - script: |
          #     ./tscli --upload $(system.defaultworkingdirectory) --threshold "high:10" --report --formats "html,json" --filename "$(appName)-report" --name "$(appName)-$(tag)"
          #   displayName: 'ThunderScan Scan'
          - task: Docker@2
            displayName: Push
            inputs:
              command: push
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(imageRepository)
              tags: |
                $(tag)

  - stage: BuildUAT
    displayName: Build UAT stage
    condition: and(always(), contains(variables['Build.SourceBranch'], 'refs/heads/main'))
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build
            inputs:
              command: build
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              buildContext: $(system.defaultworkingdirectory)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest
          # - script: |
          #     wget https://download.defensecode.com/latest/clients/tscli.tar.gz -O tscli.tar.gz
          #     tar xvzf tscli.tar.gz
          #   displayName: 'Download/Extract ThunderScan API CLI'

          # - script: |
          #     ./tscli --upload $(system.defaultworkingdirectory) --threshold "high:10" --report --formats "html,json" --filename "$(appName)-report" --name "$(appName)-$(tag)"
          #   displayName: 'ThunderScan Scan'
          - task: Docker@2
            displayName: Push
            inputs:
              command: push
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: $(imageRepository)
              tags: |
                $(tag)
